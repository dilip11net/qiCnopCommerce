@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Services.Configuration
@inject IWorkContext workContext;
@inject IStoreContext storeContext
@inject ISettingService settingService

@{
    var storeId = storeContext.CurrentStore.Id;
    var footerLayout = settingService.GetSettingByKey("brooklynthemesettings.footerlayout", "footer-1", storeId, true);
    var removeDesignedBy = settingService.GetSettingByKey("brooklynthemesettings.removedesignedby", false, storeId, true);
    var removeCopyright = settingService.GetSettingByKey("brooklynthemesettings.removecopyright", false, storeId, true);
    bool isFooter1 = String.Compare(footerLayout, "footer-1", true) == 0;
}

<div class="footer @footerLayout">

    @if (isFooter1)
    {
        <div class="footer-upper">
            @await Component.InvokeAsync("SocialButtons")
        </div>
    }

    <div class="footer-middle">
        <div class="footer-block footer-topic">
            <div class="title">
                <strong>@T("Footer.Information")</strong>
            </div>
            <div>
                @T("Information")
            </div>
        </div>

        <div class="footer-block footer-links">
            <div class="title">
                <strong>@T("Footer.MyAccount")</strong>
            </div>
            <ul class="list">

                @if (Model.DisplayCustomerOrdersFooterItem)
                {
                <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
		}

                @if (Model.DisplayCustomerAddressesFooterItem)
                {
                <li><a href="@Url.RouteUrl("CustomerAddresses")" class="">@T("Account.CustomerAddresses")</a></li>
		}
                @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart">@T("ShoppingCart")</a></li>
                }
                @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">@T("Wishlist")</a></li>
                }
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
            </ul>
        </div>

        <div class="footer-block footer-links">
            <div class="title">
                <strong>@T("Footer.CustomerService")</strong>
            </div>
            <ul class="list">

                @if (Model.DisplayContactUsFooterItem)
                {
                <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
		}
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
                @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                }
                @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                }
            </ul>
        </div>

        <div class="footer-block newsletter-block">
            @if (!isFooter1)
            {
                <div class="title">
                    <strong>@T("Footer.FollowUs")</strong>
                </div>
		
            }
            @await Component.InvokeAsync("NewsletterBox")

            @if (!isFooter1)
            {
                @await Component.InvokeAsync("SocialButtons")
            }

        </div>
    </div>
    <div class="footer-lower">
        <div class="footer-lower-center">
            @if (!removeCopyright)
            {
                <div class="footer-powered-by">
                    @*Powered by <a href="https://www.nopcommerce.com/">nopCommerce</a>*@
                    @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                        Please find more info at https://www.nopcommerce.com/nopcommerce-copyright-removal-key*@
                </div>
            }
            @if (!removeDesignedBy)
            {
                <div class="footer-designed-by">
                    @*Designed by <a href="https://www.nop-templates.com/" target="_blank">Nop-Templates.com</a>*@
                </div>
            }
            <div class="footer-disclaimer">
                @T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)
            </div>
            @if (Model.DisplayTaxShippingInfoFooter)
            {
                var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                <div class="footer-tax-shipping">
                    @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                </div>
            }
            <div class="footer-store-theme">
                @await Component.InvokeAsync("StoreThemeSelector")
            </div>
        </div>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
</div>
